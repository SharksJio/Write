# (mostly) project-independent Makefile fragment for Emscripten - v. 2021-06-09
# Installing emscripten:
#  git clone https://github.com/emscripten-core/emsdk.git
#  cd emsdk
#  ./emsdk install latest
#  ./emsdk activate latest
#  source ./emsdk_env.sh

TARGET:=$(TARGET).html

# common C and C++ flags
CFLAGS = -MMD -Wall -Wshadow -Werror=return-type
#-pthread
# C++; -Wconditionally-supported catches passing non-POD to varargs fn
CXX = em++
CXXFLAGS = --std=c++14 -fno-rtti -fno-exceptions -Wno-unused-parameter -Wno-unused-function -Wno-unused
# C
CC = emcc
CCFLAGS = --std=c99 -Werror=implicit-function-declaration -Werror=int-conversion
# linker
LD = em++
LDFLAGS = -s MAX_WEBGL_VERSION=2 -s ALLOW_MEMORY_GROWTH=1
# for calling C fns from js:
LDFLAGS += -s EXPORTED_FUNCTIONS='["_main", "_emPtrEvent"]' -s EXPORTED_RUNTIME_METHODS='["ccall","cwrap"]'
#-pthread

DEBUG ?= 0
ifneq ($(DEBUG), 0)
  #DEFS += _GLIBCXX_DEBUG ... causes "Not accessible" for containers in QtCreator debugging
  CFLAGS += -O0 -g
  # rdynamic needed to get backtrace symbols from, e.g., catchsegv
  LDFLAGS += -O0 -g
  BUILDDIR ?= EmDebug
else
  CFLAGS += -O2 -DNDEBUG
  LDFLAGS += -O2
  BUILDDIR ?= EmRelease
endif

# project independent stuff

ifneq ($(TOPDIR),)
  OBJDIR=$(BUILDDIR)/$(TOPDIR)
else
  OBJDIR=$(BUILDDIR)
endif

# include files
INCFLAGS = $(INC:%=-I%) $(INCSYS:%=-isystem %) $(INCFILES:%=-include %)

# defines
CFLAGS += $(DEFS:%=-D%)

SRCBASE=$(basename $(SOURCES))
OBJ=$(SRCBASE:%=$(OBJDIR)/%.o)
DEPS=$(SRCBASE:%=$(OBJDIR)/%.d)
TGT=$(BUILDDIR)/$(TARGET)
# gcc will not create directories, so depend on existence of all directories in output folder
# sort removes duplicates (which cause make error)
BUILDDIRS=$(sort $(dir $(OBJ)))

.PHONY: all tgz clean distclean sourcelist

all: $(TGT)

tgz: $(TGZ)

$(OBJDIR)/%.o: %.cpp
	$(CXX) -c $(CFLAGS) $(CXXFLAGS) $(INCFLAGS) -o $@ $<

$(OBJDIR)/%.o: %.c
	$(CC) -c $(CFLAGS) $(CCFLAGS) $(INCFLAGS) -o $@ $<

$(TGT): $(OBJ)
	$(LD) $(LDFLAGS) -o $@ $^ $(LIBS)

# strip $(TGT) -- remove symbols to get smaller exe
$(TGZ): $(TGT) $(DISTRES)
	strings $(TGT) | grep "^GLIBC_"
	mkdir -p $(BUILDDIR)/.dist
	mv $(TGT) $(BUILDDIR)/.dist
	cp -R $(DISTRES) $(BUILDDIR)/.dist
	mv $(BUILDDIR)/.dist $(BUILDDIR)/$(TARGET)
	(cd $(BUILDDIR) && tar --remove-files -czvf $@ $(TARGET))

# | (pipe) operator causes make to just check for existence instead of timestamp
$(OBJ): | $(BUILDDIRS)

$(BUILDDIRS):
	mkdir -p $(BUILDDIRS)

clean:
	rm -f $(TGT) $(OBJ) $(DEPS)

distclean:
	rm -rf ./EmDebug ./EmRelease

sourcelist:
	@printf '%s\n' $(SOURCES)

# dependency files generated by gcc (-MMD switch) ("-include" ignores file if missing)
-include $(DEPS)
