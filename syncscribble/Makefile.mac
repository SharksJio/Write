# (mostly) project-independent Makefile fragment for Mac OS - v. 2020-05-09
# - uses dependency files generated by gcc to automatically handle header dependencies
# - using a precompiled header with gcc (or clang) is not worth the hassle

# common C and C++ flags
CFLAGS = -MMD -Wall -Wshadow -mmacosx-version-min=10.12
# C++
CXX = g++
CXXFLAGS = --std=c++14 -fno-rtti -fno-exceptions -Wno-unused-parameter -Wno-unused-function -Wno-unused -Werror=return-type
# C
CC = gcc
CCFLAGS = --std=c99 -Werror=implicit-function-declaration -Werror=int-conversion
# Objective-C
MC = gcc -x objective-c
MFLAGS = -fobjc-arc
# linker
LD = g++
LDFLAGS = -mmacosx-version-min=10.12

DEBUG ?= 0
ifneq ($(DEBUG), 0)
	CFLAGS += -O0 -g
	# rdynamic needed to get backtrace symbols from, e.g., catchsegv
	LDFLAGS += -rdynamic
	BUILDDIR ?= MacDebug
else
	CFLAGS += -O2 -DNDEBUG
	BUILDDIR ?= MacRelease
endif

ifneq ($(TOPDIR),)
	OBJDIR=$(BUILDDIR)/$(TOPDIR)
else
	OBJDIR=$(BUILDDIR)
endif

# include files
INCFLAGS = $(INC:%=-I%) $(INCSYS:%=-isystem %) $(INCFILES:%=-include %)

# defines
CFLAGS += $(DEFS:%=-D%)

# frameworks
LIBS += $(FRAMEWORKS:%=-framework %)

SRCBASE=$(basename $(SOURCES))
OBJ=$(SRCBASE:%=$(OBJDIR)/%.o)
DEPS=$(SRCBASE:%=$(OBJDIR)/%.d)
TGTDIR=$(BUILDDIR)/$(APPDIR)/Contents
RESDIR=$(TGTDIR)/Resources
TGT=$(TGTDIR)/MacOS/$(TARGET)
DMG=$(BUILDDIR)/$(TARGET).dmg
# gcc will not create directories, so depend on existence of all directories in output folder
# sort removes duplicates (which cause make error)
BUILDDIRS=$(sort $(dir $(OBJ))) $(dir $(TGT)) $(RESDIR)

.PHONY: all dmg clean distclean sourcelist

all: $(TGT)

dmg: $(DMG)

$(OBJDIR)/%.o: %.cpp
	$(CXX) -c $(CFLAGS) $(CXXFLAGS) $(INCFLAGS) -o $@ $<

$(OBJDIR)/%.o: %.c
	$(CC) -c $(CFLAGS) $(CCFLAGS) $(INCFLAGS) -o $@ $<

$(OBJDIR)/%.o: %.m
	$(MC) -c $(CFLAGS) $(MFLAGS) $(INCFLAGS) -o $@ $<

$(TGT): $(OBJ) $(DISTRES)
	$(LD) -o $@ $(OBJ) $(LDFLAGS) $(LIBS)
	cp -R $(DISTRES) $(RESDIR)
	cp $(INFOPLIST) $(TGTDIR)

$(DMG): $(TGT)
	mkdir $(BUILDDIR)/dist
	cp -R $(BUILDDIR)/$(APPDIR) $(BUILDDIR)/dist
	cp -R $(DMGRES) $(BUILDDIR)/dist
	ln -s /Applications $(BUILDDIR)/dist/Applications
	hdiutil create $(BUILDDIR)/tmp.dmg -volname "$(TARGET)" -fs HFS+ -srcfolder "$(BUILDDIR)/dist"
	hdiutil convert $(BUILDDIR)/tmp.dmg -format UDZO -ov -o $(DMG)
	rm -r $(BUILDDIR)/dist $(BUILDDIR)/tmp.dmg

# | (pipe) operator causes make to just check for existence instead of timestamp
$(OBJ): | $(BUILDDIRS)

$(BUILDDIRS):
	mkdir -p $(BUILDDIRS)

clean:
	rm -f $(TGT) $(OBJ) $(DEPS)

distclean:
	rm -rf ./$(BUILDDIR)

sourcelist:
	@printf '%s\n' $(SOURCES)

# dependency files generated by gcc (-MMD switch) ("-include" ignores file if missing)
-include $(DEPS)
